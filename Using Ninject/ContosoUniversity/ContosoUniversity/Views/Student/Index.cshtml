@using PagedList;
@using PagedList.Mvc;
@model IPagedList<ContosoUniversity.Models.Student>

<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Student";
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
@using (Html.BeginForm("Index", "Student", FormMethod.Get))
{
    <p>
        Find by Name: @Html.TextBox("searchString","", new { placeholder = "Write your search keyword"})
        <input type="submit" value="Search" />
    </p>   
}



<table class="table table-bordered table-striped">
    <tr>
        <th>
            @Html.ActionLink("First Name", "Index", new { sortOrder = ViewBag.NameSortParam, searchString = Request.QueryString["searchString"]})
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().LastName)
        </th>
        <th>
            @Html.ActionLink("Enrollment Date", "Index", new { sortOrder = ViewBag.DateSortParam, searchString = Request.QueryString["searchString"] })
        </th>
        <th>Action</th>
    </tr>
@if (Model.Count() == 0)
{
    <tr>
        <td colspan="4">No rows Macthes the search string</td>
    </tr>
}
else
{
    foreach (var item in Model)
    { 
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.FirstName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EnrollmentDate)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.ID }) |
                @Html.ActionLink("Details", "Details", new { id = item.ID }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.ID })
            </td>
        </tr>
    }
}

</table>

@Html.PagedListPager(Model,page => Url.Action("Index", new { page, searchString = Request.QueryString["searchString"], sortOrder = Request["sortOrder"] }),
    new PagedListRenderOptions() { Display = PagedListDisplayMode.IfNeeded, DisplayPageCountAndCurrentLocation = true, DisplayItemSliceAndTotal = true })
